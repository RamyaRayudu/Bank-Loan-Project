# -*- coding: utf-8 -*-
"""Bank Loan Project

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Mp1bPfWVIUdKIZ6Uxo50LHmy9RPBfPyB
"""

# importing libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#importing dataset
df1=pd.read_csv("/content/Finance11.csv")
df2=pd.read_csv("/content/Finance12.csv")

df1

df2

# 1st KPI
# Year wise Loan Amount

years=df1.Year
loan_amount= df1.loan_amnt
plt.bar(years, loan_amount, color="teal")
plt.xlabel("Year")
plt.ylabel("Loan Amount")
plt.title('Year wise Loan Amount')
plt.show()

#2nd KPI
# Grade, Subgarde wise revol_balance

#merging
data = pd.merge(df1,df2, on ='id', how='inner')

#grouping
grp = data.groupby(['grade','sub_grade'])['revol_bal'].sum().reset_index()

#set the fig size
plt.figure(figsize=(10, 6))

#barplot
sns.barplot(data=grp,x='sub_grade',y='revol_bal', hue='grade', palette='Set2')
plt.title('Grade wise Sub-Grade wise Revol Balance', fontsize=16)
plt.xlabel('Sub-Grade', fontsize=12)
plt.ylabel('Revol Balance', fontsize=12)
plt.show()

#3rd KPI
#Total Payment for Verified status and Non-Verified Status

#merging
merged=pd.merge(df1,df2,on='id',how='inner')

#grouping
grp1=merged.groupby('verification_status')['total_pymnt'].sum()

#figsize & colors
plt.figure(figsize=(5,5))
colors = ['#66b3ff', '#ff9999', '#99ff99']

#pie visual
plt.pie(grp1, labels=grp1.index, autopct="%1.1f%%", startangle=140, colors=colors, wedgeprops={'edgecolor':'black'})
plt.title("Total Payment by Verification Status", fontsize=16)
plt.show()

#4th KPI
#State wise Month wise Loan Status


# Convert issue_d to datetime format
df1['issue_d']=pd.to_datetime(df1['issue_d'],errors='coerce')

# Create a new column for Year-Month
df1['month']=df1['issue_d'].dt.to_period('M').astype(str)

# Group by state, month, and loan status
grp2=df1.groupby(['addr_state','month','loan_status']).size().reset_index(name='count')

# Pivot table for visualization
pivot=grp2.pivot_table(index='addr_state', columns='month', values='count', aggfunc='sum', fill_value=0)

# plot heatmap
plt.figure(figsize=(12,8))
sns.heatmap(pivot, cmap="YlGnBu", linewidths=0.5, annot=False)
plt.title('Loan Status By State and Month', fontsize=16)
plt.xlabel('Month')
plt.ylabel('State')
plt.show()

# Merge on 'id'
merged_df = pd.merge(df1, df2, on='id', how='inner')

# Convert to datetime
merged_df['last_pymnt_d'] = pd.to_datetime(merged_df['last_pymnt_d'], errors='coerce')

# Group by home_ownership and get the latest payment date
last_payment_by_home = merged_df.groupby('home_ownership')['last_pymnt_d'].max().reset_index()

# Sort values by date for better visual ordering
last_payment_by_home = last_payment_by_home.sort_values(by='last_pymnt_d')

# Plot
plt.figure(figsize=(8, 6))
plt.barh(last_payment_by_home['home_ownership'], last_payment_by_home['last_pymnt_d'].dt.strftime('%Y-%m-%d'), color='skyblue')
plt.xlabel('Last Payment Date')
plt.ylabel('Home Ownership')
plt.title('Last Payment Date by Home Ownership')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()